- name: "Setup Ethereum"
  hosts: "{{ play_hosts }}"
  remote_user: "{{default_user}}"
  gather_facts: no
  tasks:
    - name: "remove existing nucypher config data"
      become: yes
      file:
        path: /home/nucypher/nucypher/
        state: absent
      when: wipe_nucypher_config is not undefined and wipe_nucypher_config

    - name: "create geth directory"
      become: yes
      file:
        path: /home/nucypher/geth/
        state: directory
        mode: '0755'

    - name: "pull ethereum/client-go:latest"
      become: yes
      docker_image:
        name: ethereum/client-go:latest
        source: pull

    - name: "create geth keystore directory"
      become: yes
      file:
        path: "{{geth_dir}}keystore"
        state: directory
        mode: '0755'

    - name: "copy local geth account"
      become: yes
      copy:
        src: "{{WORKER_ACCT_KEYSTORE_PATH}}"
        dest: "{{geth_dir}}keystore"
        owner: nucypher
      when: WORKER_ACCT_KEYSTORE_PATH is not undefined

    - name: "check for existing account"
      become: yes
      stat:
        path: "{{geth_dir}}account.txt"
      register: account_file

    - name: "echo account_file_exists"
      debug:
        verbosity: 0
        var: account_file.stat.exists

    - name: "get account address from file"
      become: yes
      command: 'cat {{geth_dir}}account.txt'
      register: remotely_created_account
      when: account_file.stat.exists and NUCYPHER_WORKER_ADDRESS is undefined

    - name: "create password file"
      become: yes
      copy:
        content: "{{runtime_envvars['NUCYPHER_WORKER_ETH_PASSWORD']}}"
        dest: "/home/nucypher/geth/password.txt"
        owner: nucypher
      when: WORKER_ACCT_KEYSTORE_PATH is undefined and not account_file.stat.exists

    - name: "echo nucypher_container_geth_datadir"
      debug:
        verbosity: 0
        var: nucypher_container_geth_datadir

    # create a local geth account if one doesn't exist
    - name: "create new account and capture the address"
      become: yes
      shell:
        cmd: 'docker run -v /home/nucypher/geth:/root ethereum/client-go:latest account new --password /root/password.txt --datadir {{geth_container_geth_datadir}} | grep "Public address of the key:" | cut -d":" -f2- | xargs'
      register: new_geth_account_checksum
      when: not account_file.stat.exists

    # now remove the password.txt needed in the previous step
    - name: "ensure password file is deleted"
      become: yes
      when: new_geth_account_checksum is not undefined
      file:
        path: "/home/nucypher/geth/password.txt"
        state: absent

    - name: "write new address to file for later use"
      become: yes
      when: not account_file.stat.exists and new_geth_account_checksum is not undefined
      copy:
        content: "{{new_geth_account_checksum.stdout}}"
        dest: "{{geth_dir}}account.txt"

    - name: "write declared worker address to file if it exists"
      become: yes
      when: NUCYPHER_WORKER_ADDRESS is not undefined
      copy:
        content: "{{NUCYPHER_WORKER_ADDRESS}}"
        dest: "{{geth_dir}}account.txt"

    - name: "get account address from file"
      become: yes
      command: 'cat {{geth_dir}}account.txt'
      register: active_account

    - name: "echo worker address"
      debug:
        verbosity: 0
        msg: "{{inventory_hostname}}:worker address:{{ active_account.stdout }}"

    - name: store worker address
      set_fact:
        worker_address: "{{active_account.stdout}}"
